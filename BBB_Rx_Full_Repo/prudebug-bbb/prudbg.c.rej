diff a/prudbg.c b/prudbg.c	(rejected hunks)
@@ -143,22 +143,12 @@ int main(int argc, char *argv[])
 	int			pru_access_mode, pi, pitemp;
 	char			uio_dev_file[50];
 
-	// say hello
-	printf ("\n");
-	printf ("PRU Debugger BBB v0.30\n");
-	printf ("(C) Copyright 2011, 2013 by Arctica Technologies.  All rights reserved.\n");
-	printf ("(C) Copyright 2015 by Christopher C. Mills.  All rights reserved.\n");
-	printf ("Written by Steven Anderson\n");
-	printf ("Modified by Christopher C. Mills\n");
-	printf ("This program comes with ABSOLUTELY NO WARRENTY\n");
-	printf ("This program is free software and is licensed under\n");
-	printf ("the GNU General Public License V3\n");
-	printf ("\n");
 
 	// get command line options
 	opt_pruss_addr = 0;
 	pru_access_mode = ACCESS_GUESS;
 	pi = DEFAULT_PROCESSOR_INDEX;
+
 	while ((opt = getopt(argc, argv, "?a:p:um")) != -1) {
 		switch (opt) {
 			case 'a':
@@ -276,17 +264,13 @@ int main(int argc, char *argv[])
 		wa[pru_num][i].state = WA_UNUSED;
 	}
 
-	// print some useful info
-	printf("Processor type		%s\n", pdb[pi].processor);
-	printf("PRUSS memory address	0x%08x\n", opt_pruss_addr);
-	printf("PRUSS memory length	0x%08x\n\n", pdb[pi].pruss_len);
-	printf("         offsets below are in 32-bit word addresses (not ARM byte addresses)\n");
-	printf("         PRU            Instruction    Data         Ctrl\n");
-	for (i=0; i<pdb[pi].num_of_pruss; i++) {
-		printf("         %-15d0x%08x     0x%08x   0x%08x\n", i, pdb[pi].offsets[i].pruss_inst, pdb[pi].offsets[i].pruss_data, pdb[pi].offsets[i].pruss_ctrl);
-	}
-	printf("\n");
 
+	offset=0x0;
+	addr = 0x4001;
+	len = 2047;
+	//cmd_d(offset, addr, len);
+	cmd_dlist(offset, addr, len);
+	return(1);
 
 	// Command prompt handler
 	do {
